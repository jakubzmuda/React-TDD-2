{"version":3,"sources":["actions/actions.js","components/Activities/Activities.js","reducers/activityReducer.js","reducers/reducers.js","epics/activityEpic.js","epics/epics.js","api/ActivitiesApi.js","App.js","store.js","index.js"],"names":["ActionType","Activities","_this","this","react_default","a","createElement","className","data-test","onClick","props","fetchRandomActivity","activities","map","entry","renderActivity","key","activity","Component","mapDispatchToProps","type","payload","connect","state","initialState","combineReducers","arguments","length","undefined","action","concat","Object","toConsumableArray","activityEpic","action$","store","_ref","activitiesApi","ofType","mergeMap","fetchActivities","result","response","combineEpics","apply","ActivitiesApi","ajax","classCallCheck","createClass","value","method","url","App","es","components_Activities_Activities","epicMiddleware","createEpicMiddleware","dependencies","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","rootEpic","setupStore","ReactDOM","render","src_App","document","getElementById"],"mappings":"8OAAaA,EACY,wBADZA,EAEoB,gCCG3BC,0LACM,IAAAC,EAAAC,KACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,UACEC,UAAW,yBACXC,YAAU,yBACVC,QAAS,kBAAMP,EAAKQ,MAAMC,wBAH5B,mBAMAP,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACbJ,KAAKO,MAAME,WAAWC,IAAI,SAAAC,GAAK,OAAIZ,EAAKa,eAAeD,8CAMhDA,GACd,OAAOV,EAAAC,EAAAC,cAAA,OAAKU,IAAKF,EAAMG,SAAUT,YAAU,kBAAkBM,EAAMG,iBAlB9CC,cA4BnBC,EAAqB,CACzBR,oBD7BiC,WACjC,MAAQ,CACNS,KAAMpB,EACNqB,QAAS,MC6BEC,cAVS,SAACC,GACvB,MAAQ,CACNX,WAAYW,EAAMX,aAQkBO,EAAzBG,CAA6CrB,mBCnC/CuB,EAAe,GCCbC,cAAgB,CAAEb,WDClB,WAAkC,IAAjCW,EAAiCG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,EAAcK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOT,MACb,KAAKpB,EACH,SAAA8B,OAAAC,OAAAC,EAAA,EAAAD,CACKR,GADL,CAEEM,EAAOR,UAEX,QACE,OAAOE,cEDEU,EAAA,CAPoB,SAACC,EAASC,EAAVC,GAAA,IAAmBC,EAAnBD,EAAmBC,cAAnB,OAClCH,EAAQI,OAAOtC,GACbuC,SAAS,SAAAV,GACR,OAAOQ,EAAcG,kBAClB3B,IAAI,SAAA4B,GAAM,OJI0BxB,EIJKwB,EAAOC,SJK7C,CACNtB,KAAMpB,EACNqB,QAASJ,GAH6B,IAACA,QKT5B0B,UAAYC,WAAZ,EAAAb,OAAAC,EAAA,EAAAD,CACVE,YCJQY,EAAb,WACE,SAAAA,EAAYC,GAAOf,OAAAgB,EAAA,EAAAhB,CAAA5B,KAAA0C,GACjB1C,KAAK2C,KAAOA,EAFhB,OAAAf,OAAAiB,EAAA,EAAAjB,CAAAc,EAAA,EAAA7B,IAAA,kBAAAiC,MAAA,WAMI,OAAO9C,KAAK2C,KAAK,CACfI,OAAQ,MACRC,IAAK,8CARXN,EAAA,GCKMO,mLAEF,OACEhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAUlB,MAAOA,GAAO/B,EAAAC,EAAAC,cAACgD,EAAD,cAHZpC,aAQZiB,ECNS,WACb,IAAME,EAAgB,IAAIQ,EAAcC,KAClCS,EAAiBC,YAAqB,CAAEC,aAAc,CAAEpB,mBAExDqB,EAAmBC,OAAOC,sCAAwCC,IAElE1B,EAAQ2B,YAAYC,EAAUL,EAAiBM,YAAgBT,KAIrE,OAFAA,EAAeU,IAAIC,GAEZ/B,EDJKgC,GAECf,IEXfgB,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0ea2e07f.chunk.js","sourcesContent":["export const ActionType = {\r\n  FETCH_RANDOM_ACTIVITY: 'FETCH_RANDOM_ACTIVITY',\r\n  FETCH_RANDOM_ACTIVITY_SUCCESS: 'FETCH_RANDOM_ACTIVITY_SUCCESS'\r\n};\r\n\r\nexport const fetchRandomActivity = () => {\r\n  return ({\r\n    type: ActionType.FETCH_RANDOM_ACTIVITY,\r\n    payload: {}\r\n  });\r\n};\r\n\r\nexport const fetchRandomActivitySuccess = (activity) => {\r\n  return ({\r\n    type: ActionType.FETCH_RANDOM_ACTIVITY_SUCCESS,\r\n    payload: activity\r\n  });\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRandomActivity } from '../../actions/actions';\r\nimport './Activities.css';\r\n\r\nclass Activities extends Component {\r\n  render () {\r\n    return (\r\n      <div className={'container'}>\r\n        <button\r\n          className={'random-activity-button'}\r\n          data-test=\"random-activity-button\"\r\n          onClick={() => this.props.fetchRandomActivity()}>\r\n          Random activity\r\n        </button>\r\n        <div className={'activities'}>\r\n          {this.props.activities.map(entry => this.renderActivity(entry))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderActivity (entry) {\r\n    return <div key={entry.activity} data-test=\"activity-entry\">{entry.activity}</div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n    activities: state.activities\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchRandomActivity\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities)\r\n","import { ActionType } from '../actions/actions';\r\n\r\nexport const initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.FETCH_RANDOM_ACTIVITY_SUCCESS:\r\n      return [\r\n        ...state,\r\n        action.payload\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport activityReducer from './activityReducer';\r\n\r\nexport default combineReducers({ activities: activityReducer })","import { ActionType, fetchRandomActivitySuccess } from '../actions/actions';\r\nimport 'rxjs/add/operator/mergeMap'\r\nimport 'rxjs/add/operator/map'\r\n\r\nexport const fetchRandomActivity = (action$, store, { activitiesApi }) =>\r\n action$.ofType(ActionType.FETCH_RANDOM_ACTIVITY)\r\n  .mergeMap(action => {\r\n    return activitiesApi.fetchActivities()\r\n      .map(result => fetchRandomActivitySuccess(result.response))\r\n  });\r\n\r\nexport default [\r\n  fetchRandomActivity\r\n]\r\n","import activityEpic from './activityEpic';\r\nimport { combineEpics } from 'redux-observable';\r\n\r\nexport default combineEpics(\r\n  ...activityEpic\r\n)","export class ActivitiesApi {\r\n  constructor(ajax) {\r\n    this.ajax = ajax;\r\n  }\r\n\r\n  fetchActivities() {\r\n    return this.ajax({\r\n      method: 'GET',\r\n      url: 'https://www.boredapi.com/api/activity'\r\n    })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Activities from './components/Activities/Activities';\r\nimport { Provider } from 'react-redux';\r\nimport setupStore from './store'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}><Activities /></Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst store = setupStore();\r\n\r\nexport default App;\r\n","import reducers from './reducers/reducers';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootEpic from './epics/epics';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { ActivitiesApi } from './api/ActivitiesApi';\r\n\r\nexport default () => {\r\n  const activitiesApi = new ActivitiesApi(ajax);\r\n  const epicMiddleware = createEpicMiddleware({ dependencies: { activitiesApi } });\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const store = createStore(reducers, composeEnhancers(applyMiddleware(epicMiddleware)));\r\n\r\n  epicMiddleware.run(rootEpic);\r\n\r\n  return store;\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}