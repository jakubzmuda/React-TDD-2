{"version":3,"sources":["actions/actions.js","components/Activities/Activities.js","reducers/activityReducer.js","reducers/reducers.js","epics/activityEpic.js","epics/epics.js","api/ActivitiesApi.js","App.js","store.js","index.js"],"names":["ActionType","Activities","_this","this","react_default","a","createElement","className","data-test","onClick","props","fetchRandomActivity","activities","map","entry","renderActivity","key","activity","Component","mapDispatchToProps","type","payload","connect","state","initialState","combineReducers","arguments","length","undefined","action","concat","Object","toConsumableArray","activityEpic","action$","store","_ref","activitiesApi","pipe","ofType","switchMap","fetchActivities","mergeMap","result","of","response","combineEpics","apply","ActivitiesApi","ajax","classCallCheck","createClass","value","method","url","App","es","components_Activities_Activities","epicMiddleware","createEpicMiddleware","dependencies","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","rootEpic","setupStore","ReactDOM","render","src_App","document","getElementById"],"mappings":"8OAAaA,EACY,wBADZA,EAEoB,gCCG3BC,0LACM,IAAAC,EAAAC,KACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACdH,EAAAC,EAAAC,cAAA,UACEC,UAAW,yBACXC,YAAU,yBACVC,QAAS,kBAAMP,EAAKQ,MAAMC,wBAH5B,mBAMAP,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACbJ,KAAKO,MAAME,WAAWC,IAAI,SAAAC,GAAK,OAAIZ,EAAKa,eAAeD,8CAMhDA,GACd,OAAOV,EAAAC,EAAAC,cAAA,OAAKU,IAAKF,EAAMG,SAAUT,YAAU,kBAAkBM,EAAMG,iBAlB9CC,cA4BnBC,EAAqB,CACzBR,oBD7BiC,WACjC,MAAQ,CACNS,KAAMpB,EACNqB,QAAS,MC6BEC,cAVS,SAACC,GACvB,MAAQ,CACNX,WAAYW,EAAMX,aAQkBO,EAAzBG,CAA6CrB,mBCnC/CuB,EAAe,GCCbC,cAAgB,CAAEb,WDClB,WAAkC,IAAjCW,EAAiCG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,EAAcK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOT,MACb,KAAKpB,EACH,SAAA8B,OAAAC,OAAAC,EAAA,EAAAD,CACKR,GADL,CAEEM,EAAOR,UAEX,QACE,OAAOE,8CECEU,EAAA,CARoB,SAACC,EAASC,EAAVC,GAAA,IAAmBC,EAAnBD,EAAmBC,cAAnB,OACjCH,EAAQI,KACNC,YAAOvC,GACPwC,YAAU,kBAAMH,EAAcI,kBAAkBH,KAC9CI,YAAS,SAAAC,GAAM,OAAIC,aJGkB3B,EIHY0B,EAAOE,SJIpD,CACNzB,KAAMpB,EACNqB,QAASJ,KAH6B,IAACA,UKT5B6B,UAAYC,WAAZ,EAAAhB,OAAAC,EAAA,EAAAD,CACVE,YCJQe,EAAb,WACE,SAAAA,EAAYC,GAAOlB,OAAAmB,EAAA,EAAAnB,CAAA5B,KAAA6C,GACjB7C,KAAK8C,KAAOA,EAFhB,OAAAlB,OAAAoB,EAAA,EAAApB,CAAAiB,EAAA,EAAAhC,IAAA,kBAAAoC,MAAA,WAMI,OAAOjD,KAAK8C,KAAK,CACfI,OAAQ,MACRC,IAAK,8CARXN,EAAA,GCKMO,mLAEF,OACEnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUrB,MAAOA,GAAO/B,EAAAC,EAAAC,cAACmD,EAAD,cAHZvC,aAQZiB,ECNS,WACb,IAAME,EAAgB,IAAIW,EAAcC,KAClCS,EAAiBC,YAAqB,CAAEC,aAAc,CAAEvB,mBAExDwB,EAAmBC,OAAOC,sCAAwCC,IAElE7B,EAAQ8B,YAAYC,EAAUL,EAAiBM,YAAgBT,KAIrE,OAFAA,EAAeU,IAAIC,GAEZlC,EDJKmC,GAECf,IEXfgB,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eb0d6d39.chunk.js","sourcesContent":["export const ActionType = {\n  FETCH_RANDOM_ACTIVITY: 'FETCH_RANDOM_ACTIVITY',\n  FETCH_RANDOM_ACTIVITY_SUCCESS: 'FETCH_RANDOM_ACTIVITY_SUCCESS'\n};\n\nexport const fetchRandomActivity = () => {\n  return ({\n    type: ActionType.FETCH_RANDOM_ACTIVITY,\n    payload: {}\n  });\n};\n\nexport const fetchRandomActivitySuccess = (activity) => {\n  return ({\n    type: ActionType.FETCH_RANDOM_ACTIVITY_SUCCESS,\n    payload: activity\n  });\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRandomActivity } from '../../actions/actions';\nimport './Activities.css';\n\nclass Activities extends Component {\n  render () {\n    return (\n      <div className={'container'}>\n        <button\n          className={'random-activity-button'}\n          data-test=\"random-activity-button\"\n          onClick={() => this.props.fetchRandomActivity()}>\n          Random activity\n        </button>\n        <div className={'activities'}>\n          {this.props.activities.map(entry => this.renderActivity(entry))}\n        </div>\n      </div>\n    );\n  }\n\n  renderActivity (entry) {\n    return <div key={entry.activity} data-test=\"activity-entry\">{entry.activity}</div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return ({\n    activities: state.activities\n  });\n};\n\nconst mapDispatchToProps = {\n  fetchRandomActivity\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activities)\n","import { ActionType } from '../actions/actions';\n\nexport const initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.FETCH_RANDOM_ACTIVITY_SUCCESS:\n      return [\n        ...state,\n        action.payload\n      ];\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport activityReducer from './activityReducer';\n\nexport default combineReducers({ activities: activityReducer })","import { ActionType, fetchRandomActivitySuccess } from '../actions/actions';\nimport { of } from 'rxjs'\nimport { mergeMap, switchMap } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\n\nexport const fetchRandomActivity = (action$, store, { activitiesApi }) =>\n  action$.pipe(\n    ofType(ActionType.FETCH_RANDOM_ACTIVITY),\n    switchMap(() => activitiesApi.fetchActivities().pipe(\n      mergeMap(result => of(fetchRandomActivitySuccess(result.response))),\n    ))\n  );\n\nexport default [\n  fetchRandomActivity\n]\n","import activityEpic from './activityEpic';\nimport { combineEpics } from 'redux-observable';\n\nexport default combineEpics(\n  ...activityEpic\n)","export class ActivitiesApi {\n  constructor(ajax) {\n    this.ajax = ajax;\n  }\n\n  fetchActivities() {\n    return this.ajax({\n      method: 'GET',\n      url: 'https://www.boredapi.com/api/activity'\n    })\n  }\n}","import React, { Component } from 'react';\nimport Activities from './components/Activities/Activities';\nimport { Provider } from 'react-redux';\nimport setupStore from './store'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}><Activities /></Provider>\n    );\n  }\n}\n\nconst store = setupStore();\n\nexport default App;\n","import reducers from './reducers/reducers';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootEpic from './epics/epics';\nimport { ajax } from 'rxjs/ajax';\nimport { ActivitiesApi } from './api/ActivitiesApi';\n\nexport default () => {\n  const activitiesApi = new ActivitiesApi(ajax);\n  const epicMiddleware = createEpicMiddleware({ dependencies: { activitiesApi } });\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const store = createStore(reducers, composeEnhancers(applyMiddleware(epicMiddleware)));\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}